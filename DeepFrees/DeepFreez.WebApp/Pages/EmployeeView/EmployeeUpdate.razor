@page "/UpdateEmployee/{NIC}"
@using DeepFreez.WebApp.Service;
@using DeepFreez.WebApp.Model;


@inject EmployeeService EmployeeService
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item"><a href="#">Library</a></li>
        <li class="breadcrumb-item active" aria-current="page">Data</li>
    </ol>
</nav>

<h3>Employee Update</h3>
<p>Please Edit the necessary information</p>

<form>
    <div class="form-group">
        <label for="Username">Username</label>
        <input type="text" class="form-control" id="Username" placeholder="Username" @bind="Username" />
    </div>
    <br />

    <div class="form-group">
        <label for="NIC">NIC</label>
        <input type="text" class="form-control" id="NIC" placeholder="NIC" @bind="NIC" disabled>
    </div>
    <br />

    <div class="form-group">
        <label for="Mobile">Mobile</label>
        <input type="text" class="form-control" id="Mobile" placeholder="Mobile" @bind="Mobile">
    </div>
    <br />

    <div class="form-group">
        <label for="Email">Email Address</label>
        <input type="text" class="form-control" id="Email" placeholder="Email" @bind="Email">
    </div>
    <br />

    <div class="form-group">
        <label for="Physical">Physical Address</label>
        <input type="text" class="form-control" id="Physical" placeholder="Physical" @bind="Physical">
    </div>
    <br />

    <div class="form-group">
        <label for="Role">Employee Role</label>
        <input type="text" class="form-control" id="Role" placeholder="Role" @bind="Role">
    </div>
    <br />

    <div class="form-group">
        <label for="Privilege">Privilege</label>
        <input type="text" class="form-control" id="Privilege" placeholder="Privilege" @bind="Privilege">
    </div>
    <br />
    <button type="button" class="btn btn-primary" @onclick="UpdateUser">Update Account</button>
</form>


@code {
    [Parameter]
    public string NIC { get; set; }

    private string Username;
    private string Mobile;
    private string Physical;
    private string Role;
    private string Privilege;
    private string Email;

    protected override async Task OnInitializedAsync()
    {
        Employee Employee = await EmployeeService.GetEmployee(NIC);

        NIC = Employee.NIC;
        Username = Employee.Name;
        Email = Employee.Contact.EmailAddress;
        Mobile = Employee.Contact.Mobile;
        Physical = Employee.Contact.PhysicalAddress;
        Privilege = Employee.Roles.Privilege;
        Role = Employee.Roles.EmployeeRole;
    }
    private async void UpdateUser()
    {
        Employee Employee = new Employee();

        Employee.NIC = NIC;
        Employee.Name = Username;
        Employee.Contact = new Contact() { EmailAddress = Email, Mobile = Mobile, PhysicalAddress = Physical };
        Employee.Roles = new Roles() { EmployeeRole = Role, Privilege = Privilege };
        Employee.WorkTasks = new List<WorkTask>();

        await EmployeeService.UpdateEmployee(NIC,Employee);
    }
}
