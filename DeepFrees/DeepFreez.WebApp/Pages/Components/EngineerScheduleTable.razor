@using DeepFreez.WebApp.Model;
@using DeepFreez.WebApp.Service;

@inject DFScheduler DFScheduler

<p>The employee table is for the month of August</p>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<div class="toolbar">
    <a href="/EmployeeWTV">Shuffle <i class="fa fa-random" aria-hidden="true"></i></a>
    <a href="/EmployeeWTV">Download <i class="fa fa-download" aria-hidden="true"></i></a>
    <a href="/EmployeeWTV">Save <i class="fa fa-floppy-o" aria-hidden="true"></i></a>
</div>

<div class="table-wrapper">
    <table class="fl-table">
        <thead>
            <tr>
                <th>Employee</th>
                <th>Week 1</th>
                <th>Week 2</th>
                <th>Week 3</th>
                <th>Week 4</th>
                <th>+Week 5</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Content 1</td>
                <td>Content 1</td>
                <td>Content 1</td>
                <td>Content 1</td>
                <td>Content 1</td>
                <td>Content 1</td>
            </tr>
            <tr>
                <td>Content 2</td>
                <td>Content 2</td>
                <td>Content 2</td>
                <td>Content 2</td>
                <td>Content 2</td>
                <td>Content 2</td>
            </tr>
            <tr>
                <td>Content 3</td>
                <td>Content 3</td>
                <td>Content 3</td>
                <td>Content 3</td>
                <td>Content 3</td>
                <td>Content 3</td>
            </tr>
            <tr>
                <td>Content 4</td>
                <td>Content 4</td>
                <td>Content 4</td>
                <td>Content 4</td>
                <td>Content 4</td>
                <td>Content 4</td>
            </tr>
            <tr>
                <td>Content 5</td>
                <td>Content 5</td>
                <td>Content 5</td>
                <td>Content 5</td>
                <td>Content 5</td>
                <td>Content 5</td>
            </tr>
            <tr>
                <td>Content 6</td>
                <td>Content 6</td>
                <td>Content 6</td>
                <td>Content 6</td>
                <td>Content 6</td>
                <td>Content 6</td>
            </tr>
            <tr>
                <td>Content 7</td>
                <td>Content 7</td>
                <td>Content 7</td>
                <td>Content 7</td>
                <td>Content 7</td>
                <td>Content 7</td>
            </tr>
            <tr>
                <td>Content 8</td>
                <td>Content 8</td>
                <td>Content 8</td>
                <td>Content 8</td>
                <td>Content 8</td>
                <td>Content 8</td>
            </tr>
            <tr>
                <td>Content 9</td>
                <td>Content 9</td>
                <td>Content 9</td>
                <td>Content 9</td>
                <td>Content 9</td>
                <td>Content 9</td>
            </tr>
            <tr>
                <td>Content 10</td>
                <td>Content 10</td>
                <td>Content 10</td>
                <td>Content 10</td>
                <td>Content 10</td>
                <td>Content 10</td>
            </tr>
        </tbody>
    </table>
</div>

@code {
    protected override void OnInitialized()
    {
        List<Job> jobs = new List<Job>
        {
            new Job
            {
                Tasks = new List<WorkTask>
                {
                    new WorkTask { Machine = 1, Duration = 10 },
                    new WorkTask { Machine = 2, Duration = 15 },
                    new WorkTask { Machine = 3, Duration = 20 }
                }
            },
            new Job
            {
                Tasks = new List<WorkTask>
                {
                    new WorkTask { Machine = 2, Duration = 12 },
                    new WorkTask { Machine = 4, Duration = 18 }
                }
            },
            new Job
            {
                Tasks = new List<WorkTask>
                {
                    new WorkTask { Machine = 1, Duration = 8 },
                    new WorkTask { Machine = 3, Duration = 14 },
                    new WorkTask { Machine = 4, Duration = 10 }
                }
            }
        };
        DFScheduler.SendDataToApi(jobs);

    }
}
