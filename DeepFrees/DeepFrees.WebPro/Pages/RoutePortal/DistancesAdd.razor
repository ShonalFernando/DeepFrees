@page "/Delivery/AddDistances"
@using DeepFrees.WebPro.Model;
@using DeepFrees.WebPro.Services;

@inject VRoutingStream VRoutingStream

<PageTitle>Add Distances</PageTitle>

<div class="jumbotron">
     <h1 class="display-4"><a href="/Delivery"><img width="44" height="44" src="https://img.icons8.com/metro/44/000000/circled-left-2.png" alt="circled-left-2" /></a>&nbsp; Routes and Delivery Managemenet</h1>
    <p class="lead">Current Routes</p>
    <hr class="my-4">
    <p class="lead">
        <a class="btn btn-dark btn-lg" href="/Delivery/AddLocation" role="button">Add Locations</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/AddDistances" role="button">Add Distances</a>
        <a class="btn btn-dark btn-lg" href="#" role="button">Manage Locations</a>
        <a class="btn btn-dark btn-lg" href="#" role="button">Create New Route</a>
        <a class="btn btn-dark btn-lg" href="#" role="button">Other Tools</a>
    </p>
</div>

<br />
<br />

@if (Locations == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h4>City Newly Added<span class="badge badge-secondary">5</span></h4>

    <div class="form-group">
        <label for="selectCity2">Destination</label>
        <select class="form-control" id="selectCity2" @bind="selectedCity2">
            @foreach (var city in Locations)
            {
                <option value="@city.locationID">@city.city</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label for="distancein">Distance</label>
        <input type="number" class="form-control" id="distancein">
    </div>

    <br/>

    <button @onclick="Calc" class="btn btn-primary">Add</button>

    <br />
    <br />

    <h3>Current Distance Matrix for City</h3>

    <table class="table">
        <thead>
            <tr>
                <th scope="col">City</th>
                <th scope="col">Distance</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Mark</td>
                <td>Mark</td>
            </tr>
            <tr>
                <td>Jacob</td>
                <td>Jacob</td>
            </tr>
            <tr>
                <td>Larry</td>
                <td>Larry</td>
            </tr>
        </tbody>
    </table>

    <button @onclick="Calc" class="btn btn-danger">Confirm Distance Matrix</button>


}


@code {
    private string selectedCity1 = "5";
    private string selectedCity2 = "";
    private string? selectedDistance { get; set; }


    private string? CurrentValue;
    private List<Location>? Locations;
    private List<DistanceModel>? Distances { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Locations = await VRoutingStream.GetAllLocations();
        Distances = await VRoutingStream.GetAllDistances();
    }

    private void Calc()
    {

        Console.WriteLine("Wait...");

        Console.WriteLine(selectedCity1 + " : " + selectedCity2);

        var l1 = Locations.Find(l => l.locationID.Equals(int.Parse(selectedCity1)));
        var l2 = Locations.Find(li => li.locationID.Equals(int.Parse(selectedCity2)));

        if (l1 != null && l2 != null)
        {
            var distR = Distances.Find(d => d.locationID.Equals(l1.locationID));
            selectedDistance = distR.distances[l2.locationID.ToString()].ToString();
            //StateHasChanged();
        }
        else
        {
            Console.WriteLine("Null");
        }
    }
}
