@page "/Delivery/AddDistances"
@using DeepFrees.WebPro.Model;
@using DeepFrees.WebPro.Services;

@inject VRoutingStream VRoutingStream
@inject NavigationManager NavigationManager

<PageTitle>Add Distances</PageTitle>

<div class="jumbotron">
     <h1 class="display-4"><a href="/Delivery"><img width="44" height="44" src="https://img.icons8.com/metro/44/000000/circled-left-2.png" alt="circled-left-2" /></a>&nbsp; Routes and Delivery Managemenet</h1>
    <p class="lead">Add Location >> Assign Distance Matrices</p>
    <hr class="my-4">
    <p class="lead">
        <a class="btn btn-dark btn-lg" href="/Delivery" role="button">Routes</a>
        <a class="btn btn-secondary btn-lg" href="/Delivery/AddLocation" role="button">Add Locations</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/DistanceSheet" role="button">Check Distance Between Locations</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/CreateRoute" role="button">Create New Route</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/ManageLocation" role="button">Edit Locations</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/EditDistances" role="button">Edit Distance</a>
    </p>
</div>

<br />
<br />

@if (Locations == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h4>@Location<span class="badge badge-secondary">5</span></h4>

    @if (Locations == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="form-group">
            <label for="selectCity1">Select Destination</label>
            <select class="form-control" id="selectCity1" @bind="selectedCity1">
                @foreach (var city in Locations)
                {
                    @if (!dkvp.ContainsKey(city.locationID.ToString()))
                    {
                        <option value="@city.locationID">@city.city</option>
                    }
                    else
                    {
                        <option value="@city.locationID">@city.city - Already Added</option>
                    }
                }
            </select>
        </div>

        <div class="form-group">
            <label for="distance">Enter Distance</label>
            <input type="number" class="form-control" id="distance" @bind="distance" />
        </div>

        <br/>

        <div class="form-group">
            <button @onclick="AddDistance" class="btn btn-primary">Add Distance</button>
        </div>

        <br/>
        <br/>

        <!-- Display the added distances in a table -->
        @if (dkvp.Count > 0)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Destination City</th>
                        <th>Distance</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in dkvp)
                    {
                        <tr>
                            <td>@Locations.FirstOrDefault(l => l.locationID == Convert.ToInt32(item.Key))?.city</td>
                            <td>@item.Value</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
    }


    <button @onclick="Calc" class="btn btn-danger">Confirm Distance Matrix</button>


}


@code {
    private int selectedCity1 { get; set; }

    private string distance { get; set; }


    string? Location { get; set; }

    private string? CurrentValue;
    private List<Location>? Locations;

    Dictionary<string, long> DistanceMatrix = new Dictionary<string, long>();
    Dictionary<string, long> dkvp = new(); //Temporary

    protected override async Task OnInitializedAsync()
    {
        Locations = await VRoutingStream.GetAllLocations();

        var uri = new Uri(NavigationManager.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

        Location = query["Location"];
    }

    void Calc()
    {
        //asd
    }

    void AddDistance()
    {
        Console.WriteLine("A3");

        if (selectedCity1 >-1 && !string.IsNullOrEmpty(distance) && Location != null)
        {
            Console.WriteLine("A2");

            @if (!dkvp.ContainsKey(selectedCity1.ToString()))
            {
                // Parse distance as needed (e.g., to double)
                if (long.TryParse(distance, out long distanceValue))
                {
                    Console.WriteLine("A1");
                    dkvp.Add(selectedCity1.ToString(), distanceValue);


                    // Clear the input fields
                    selectedCity1 = 0;
                    distance = string.Empty;

                    StateHasChanged();
                }
            }
            else

            {
                //Handle error already exist
            }
        }
    }

}
