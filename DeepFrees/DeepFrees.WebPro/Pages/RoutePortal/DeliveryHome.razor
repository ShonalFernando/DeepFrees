@page "/Delivery"
@using DeepFrees.WebPro.Model.HelperModels;
@using DeepFrees.WebPro.Model;
@using DeepFrees.WebPro.Pages.RoutePortal
@using DeepFrees.WebPro.Services;

@inject VRoutingStream VRoutingStream

<PageTitle>Delivery Routing</PageTitle>

<div class="jumbotron">
    <h1 class="display-4">Routes and Delivery Managemenet</h1>
    <p class="lead">Current Routes</p>
    <hr class="my-4">
    <p class="lead">
        <a class="btn btn-secondary btn-lg" href="/Delivery" role="button">Routes</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/AddLocation" role="button">Add Locations</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/DistanceSheet" role="button">Check Distance Between Locations</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/CreateRoute" role="button">Create New Route</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/ManageLocation" role="button">Edit Locations</a>
        <a class="btn btn-dark btn-lg" href="/Delivery/EditDistances" role="button">Edit Distance</a>
    </p>
</div>

<br />
<br />

<div id="accordion">

    @if (savedRoutes == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        @foreach(var route in savedRoutes)
        {
            <div class="card">
                <div class="card-header" id="headingOne">
                    <h5 class="mb-0">
                        <button class="btn btn-link" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            @route.routeName
                        </button>
                    </h5>
                </div>
                <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordion">
                    <div class="card-body">
                        <ul class="list-group">
                            <li class="list-group-item"> @Locations.FirstOrDefault(l => l.locationID == Convert.ToInt32(0))?.city</li>
                            @foreach(var routeIndex in route.routeOrder)
                            {
                                <li class="list-group-item"><img width="12" height="12" src="https://img.icons8.com/metro/12/228BE6/right3.png" alt="right3" />&nbsp; @Locations.FirstOrDefault(l => l.locationID == Convert.ToInt32(routeIndex))?.city</li>
                            }
                        </ul>
                        <br />
                        <h5>Total Distance: @route.totalDistance KM</h5>
                    </div>
                </div>
            </div>
        }

    }

</div>

@code {

    private List<SavedRoute>? savedRoutes { get; set; }
    private List<Location>? Locations { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Locations = await VRoutingStream.GetAllLocations();
        savedRoutes = await VRoutingStream.GetAllRoutes();
    }
}
