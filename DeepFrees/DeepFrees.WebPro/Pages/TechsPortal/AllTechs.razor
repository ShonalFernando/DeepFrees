@page "/Technicians"

@using DeepFrees.EmployeeService.Model;
@using DeepFrees.TechnicianService.Model;
@using DeepFrees.WebPro.Services
@inject TechnicianStream TechnicianStream

<PageTitle>Technicians</PageTitle>

<div class="jumbotron">
    <h1 class="display-4">Technician Portal</h1>
    <p class="lead">All Technicians</p>
    <hr class="my-4">
    <p class="lead">
        <a class="btn btn-secondary btn-lg" href="/Technicians" role="button">All Technicians</a>
        <a class="btn btn-dark btn-lg" href="/Technicians/Add" role="button">Add Technicians</a>
    </p>
</div>

<br />
<br />

@if (Technicians == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th> NIC </th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Qualification</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Technician in Technicians)
            {
                <tr>
                    <td><a href="@InLink=@Technician.nic">@Technician.nic</a></td>
                    <td>@Technician.firstName</td>
                    <td>@Technician.lastName</td>
                    <td>@Technician.qualification</td>
                </tr>
            }
            <tr>
                <td><a href="/Technicians/Add">Add + </a></td>
                <td> </td>
                <td> </td>
                <td> </td>
            </tr>
        </tbody>
    </table>
}

@code {
    private List<Technician>? Technicians;
    private string InLink = "/Technicians/InDetail?NIC";

    protected override async Task OnInitializedAsync()
    {
        Technicians = await TechnicianStream.GetTechnicianAll();
    }
}
