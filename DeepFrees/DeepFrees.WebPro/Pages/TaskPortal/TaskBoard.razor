@using System.Collections.Generic;
@using System.Reflection;

@page "/Taskboard"

<PageTitle>TaskBoard</PageTitle>

@using DeepFrees.EmployeeService.Model;
@using DeepFrees.TaskService.Model;
@using DeepFrees.WebPro.Services

@inject WorkTaskStream WorkTaskStream
@inject NavigationManager NavigationManager


<nav class="breadcrumbs">
    <a href="/" class="breadcrumbs__item">Home</a>
    <a href="/Taskboard" class="breadcrumbs__item is-active">Taskboard</a>
</nav>


<br />
<br />

<h1>All Tasks</h1>

<p><a href="/Taskboard/Add">Click Here to Add an Employee</a></p>




<h1></h1>

@if (WorkTasks == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Task Category</th>
                <th>Weight</th>
                <th>Length</th>
                <th>Task Name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var workTask in WorkTasks)
            {
                <tr>
                    <td>@workTask.taskCategory</td>
                    <td>@workTask.taskWeigth</td>
                    <td>@workTask.taskLengthInDays : @workTask.taskLengthInHours</td>
                    <td>@workTask.taskName</td>
                    <td><a href="/">Remove</a></td>
                </tr>
            }
            <tr>
                <td><a href="/Taskboard/Add">Add + </a></td>
                <td> </td>
                <td> </td>
                <td> </td>
                <td> </td>
            </tr>
        </tbody>
    </table>
}
@code {
    private List<WorkTask>? WorkTasks;
    private string InLink = "/Employees/EmployeeInDetail?NIC"; //

    protected override async Task OnInitializedAsync()
    {
        WorkTasks = await WorkTaskStream.GetWorkTasksAll();
    }
}
